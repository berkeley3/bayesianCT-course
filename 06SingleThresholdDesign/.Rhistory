med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
list(alpha=y$x[1], beta=y$x[2])
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
list(alpha=y[1], beta=y[2])
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
?nleqslv
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y$x
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
res=y
res$x
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
res=y
res
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
res=y
res[[1]]
}
require(nleqslv)
x.start=c(1,1)
w90=0.3
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
pparameter=function(pi, w90, prior.method='median-informative'){
if(prior.method=='median-informative'){
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
}
x.start=c(1,1)
param = nleqslv(x.start, med.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
}
res
}
pparameter(pi=0.6, w90=0.3)
pparameter=function(pi, w90, prior.method='median-informative'){
if(prior.method=='median-informative'){
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
}
x.start=c(1,1)
param = nleqslv(x.start, med.inf, pi=pi, w90=w90)
#res=list(alpha=param$x[1], beta=param$x[2])
res = param
}
res
}
pparameter(pi=0.6, w90=0.3)
pparameter=function(pi, w90, prior.method='median-informative'){
if(prior.method=='median-informative'){
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
}
x.start=c(1,1)
param = nleqslv(x.start, med.inf, pi=pi, w90=w90)
#res=list(alpha=param$x[1], beta=param$x[2])
res = param
}
res
}
pparameter(pi=0.6, w90=0.3)
pparameter=function(pi, w90, prior.method='median-informative'){
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90}
if(prior.method=='median-informative'){
x.start=c(1,1)
param = nleqslv(x.start, med.inf, pi=pi, w90=w90)
#res=list(alpha=param$x[1], beta=param$x[2])
res = param
}
res
}
pparameter=function(pi, w90, prior.method='median-informative'){
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90}
if(prior.method=='median-informative'){
x.start=c(1,1)
param = nleqslv(x.start, med.inf, pi=pi, w90=w90)
#res=list(alpha=param$x[1], beta=param$x[2])
res = param
}
res
}
pparameter
pparameter(pi=0.6, w90=0.3)
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
}
require(nleqslv)
x.start=c(1,1)
nleqslv(x.start, med.inf, pi=0.6, w90=0.3)
pparameter=function(pi, w90, prior.method='median-informative'){
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
if(prior.method=='median-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, med.inf, pi=pi, w90=w90)
#res=list(alpha=param$x[1], beta=param$x[2])
res = param
}
res
}
pparameter(pi=0.6, w90=0.3)
pparameter=function(pi, w90, prior.method='median-informative'){
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
if(prior.method=='median-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, med.inf, pi=pi, w90=w90)
#res=list(alpha=param$x[1], beta=param$x[2])
res = param$x
}
res
}
pparameter(pi=0.6, w90=0.3)
pparameter=function(pi, w90, prior.method='median-informative'){
med.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
if(prior.method=='median-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, med.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
res
}
pparameter(pi=0.6, w90=0.3)
pparameter=function(pi, w90, prior.method=c('median-informative','mean-informative'){
median.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
mean.inf=function(x, pi, w90){
y=numeric(2)
y[1]=x[1]/(x[1]+ x[2])-pi
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
if(prior.method=='median-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
if(prior.method=='mean-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
res
}
pparameter=function(pi, w90, prior.method=c('median-informative','mean-informative')){
median.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
mean.inf=function(x, pi, w90){
y=numeric(2)
y[1]=x[1]/(x[1]+ x[2])-pi
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
if(prior.method=='median-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
if(prior.method=='mean-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
res
}
pparameter(pi=0.6, w90=0.3, prior.method='median-informative')
pparameter(pi=0.6, w90=0.3, prior.method='mean-informative')
pparameter=function(pi, w90, prior.method=c('median-informative','mean-informative')){
median.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
mean.inf=function(x, pi, w90){
y=numeric(2)
y[1]=x[1]/(x[1]+ x[2])-pi
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
if(prior.method=='median-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
if(prior.method=='mean-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
res
}
pparameter(pi=0.6, w90=0.3, prior.method='mean-informative')
pparameter=function(pi, w90, prior.method=NULL){
median.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
mean.inf=function(x, pi, w90){
y=numeric(2)
y[1]=x[1]/(x[1]+ x[2])-pi
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
if(prior.method=='median-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
if(prior.method=='mean-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
res
}
pparameter(pi=0.6, w90=0.3, prior.method='median-informative')
pparameter(pi=0.6, w90=0.3, prior.method='mean-informative')
pparameter=function(pi, w90, prior.method=c('median-informative','mean-informative')){
median.inf=function(x, pi, w90){
y=numeric(2)
y[1]=pbeta(pi, x[1], x[2])-0.5
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
mean.inf=function(x, pi, w90){
y=numeric(2)
y[1]=x[1]/(x[1]+ x[2])-pi
y[2] = qbeta(0.95, x[1], x[2])-qbeta(0.05, x[1], x[2])-w90
y}
if(prior.method=='median-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, median.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
if(prior.method=='mean-informative'){
require(nleqslv)
x.start=c(1,1)
param = nleqslv(x.start, mean.inf, pi=pi, w90=w90)
res=list(alpha=param$x[1], beta=param$x[2])
#res = param$x
}
res
}
pparameter(pi=0.6, w90=0.3, prior.method='median-informative')
pparameter(pi=0.6, w90=0.3, prior.method='mean-informative')
stage2=function(ru, pi, epsilon=0.05, lambda, alpha=NULL, beta=NULL){
N=9
post=0
while(post<lambda){
N=N+1
x=(ru+epsilon)*N
if (is.null(alpha)) alpha = pi+1+x
if (is.null(beta)) beta = 1-pi+1+N-x
post=1-pbeta(ru,alpha, beta)
}
res=list(N=N, posterior=post)
res
}
stage2(ru=0.80, lambda=0.8, alpha=16.76, beta=11.17)
stage2(ru=0.80, lambda=0.8, alpha=14.23, beta=3.56)
?is.null
ru=0.8
lambda=0.8
alpha=14.23
beta=3.56
epsilon=0.05
N=9
post=0
N=N+1
x=(ru+epsilon)*N
if (is.null(alpha)) alpha = pi+1+x
if (is.null(beta)) beta = 1-pi+1+N-x
post=1-pbeta(ru,alpha, beta)
post
N=N+1
x=(ru+epsilon)*N
if (is.null(alpha)) alpha = pi+1+x
if (is.null(beta)) beta = 1-pi+1+N-x
post=1-pbeta(ru,alpha, beta)
post
N
stage2=function(ru, pi, epsilon=0.05, lambda, alpha=NULL, beta=NULL){
N=9
post=0
while(post<lambda){
N=N+1
x=(ru+epsilon)*N
if (is.null(alpha)) alpha = alpha+x
if (is.null(beta)) beta = beta+N-x
post=1-pbeta(ru,alpha, beta)
}
res=list(N=N, posterior=post)
res
}
stage2(ru=0.80, lambda=0.8, alpha=14.23, beta=3.56)
stage2=function(ru, pi, epsilon=0.05, lambda, alpha=NULL, beta=NULL){
if (is.null(alpha)) alpha= pi+1
if (is.null(beta)) beta= 1-pi+1
N=9
post=0
while(post<lambda){
N=N+1
x=(ru+epsilon)*N
alpha = alpha+x
beta = beta+N-x
post=1-pbeta(ru,alpha, beta)
}
res=list(N=N, posterior=post)
res
}
stage2(ru=0.55, pi=0.7, lambda=0.7)
stage2=function(ru, pi, epsilon=0.05, lambda, alpha=NULL, beta=NULL){
if (is.null(alpha)) alpha= pi+1
if (is.null(beta)) beta= 1-pi+1
N=9
post=0
while(post<lambda){
N=N+1
x=(ru+epsilon)*N
alpha1 = alpha+x
beta1 = beta+N-x
post=1-pbeta(ru,alpha1, beta1)
}
res=list(N=N, posterior=post)
res
}
stage2(ru=0.55, pi=0.7, lambda=0.7)
stage2(ru=0.80, lambda=0.8, alpha=14.23, beta=3.56)
stage1=function(ru, pi, epsilon=0.05, lambda, N, alpha=NULL, beta=NULL){
n=4
x=(ru+epsilon)*n
if (is.null(alpha)) alpha = pi+1+x
if (is.null(beta)) beta = 1-pi+1+N-x
post=1-pbeta(ru,alpha, beta)
if(post>=lambda){print("n<5")}else{while(post<lambda & n<=(N-5)){
n=n+1
x=(ru+epsilon)*n
alpha1 = alpha+x
beta1 = beta+N-x
post=1-pbeta(ru,alpha1, beta1)
}
res=list(n=n, posterior=post)
res}
}
stage1(ru=0.55, pi=0.7, lambda=0.6, N=26)
stage1=function(ru, pi, epsilon=0.05, lambda, N, alpha=NULL, beta=NULL){
n=4
x=(ru+epsilon)*n
if (is.null(alpha)) alpha = pi+1
if (is.null(beta)) beta = 1-pi+1
alpha1 = alpha+x
beta1 = beta+N-x
post=1-pbeta(ru,alpha1, beta1)
if(post>=lambda){print("n<5")}else{while(post<lambda & n<=(N-5)){
n=n+1
x=(ru+epsilon)*n
alpha1 = alpha+x
beta1 = beta+N-x
post=1-pbeta(ru,alpha1, beta1)
}
res=list(n=n, posterior=post)
res}
}
stage1(ru=0.55, pi=0.7, lambda=0.6, N=26)
stage2(ru=0.55, pi=0.7, lambda=0.7)
stage1(ru=0.55, pi=0.7, lambda=0.6, N=26)
stage1=function(ru, pi, epsilon=0.05, lambda, N, alpha=NULL, beta=NULL){
n=4
x=(ru+epsilon)*n
if (is.null(alpha)) alpha = pi+1
if (is.null(beta)) beta = 1-pi+1
alpha1 = alpha+x
beta1 = beta+n-x
post=1-pbeta(ru,alpha1, beta1)
if(post>=lambda){print("n<5")}else{while(post<lambda & n<=(N-5)){
n=n+1
x=(ru+epsilon)*n
alpha1 = alpha+x
beta1 = beta+n-x
post=1-pbeta(ru,alpha1, beta1)
}
res=list(n=n, posterior=post)
res}
}
stage1(ru=0.55, pi=0.7, lambda=0.6, N=26)
install.packages("clinfun")
library(clinfun)
?ph2simon
ph2simon(0.05, 0.15, 0.05, 0.3)
print(ph2simon(0.05, 0.15, 0.05, 0.3))
plot(ph2simon(0.05, 0.15, 0.05, 0.3))
